/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.runtime' version '1.13.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
	//MaterialFX dependency
	implementation 'io.github.palexdev:materialfx:11.16.1'
	
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'
	
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // smartgraph dependency
    implementation files('JavaFXSmartGraph-0.9.4.jar')
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
}

runtime {
    options.set(['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages'])
    launcher {
        noConsole = true
    }
    jpackage {
        imageOptions = ["--icon", "lib/src/main/resources/IPM/photos/icon.ico"]
        installerOptions = ['--win-per-user-install', '--win-dir-chooser', '--win-menu']
        installerName = 'IPM'
    }
    modules = ['java.base', 'java.desktop', 'jdk.jfr', 'jdk.unsupported', 'java.scripting', 'java.logging', 'java.xml']
}

// Configure both application and run task
application {
    mainClass.set('IPM.Main')
}

tasks.named('run') {
    mainClass.set('IPM.Main')
}
